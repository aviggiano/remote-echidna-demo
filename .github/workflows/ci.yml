name: CI

on: [pull_request, push]

jobs:
  remote-echidna:
    name: Run remote-echidna
    env:
      project: "re2"
      project_git_url: "https://github.com/${{github.repository}}.git"
      project_git_checkout: ${{ github.head_ref || github.ref_name }}
      s3_bucket: ${{ secrets.REMOTE_ECHIDNA_S3_BUCKET }}
      ec2_instance_key_name: ${{ secrets.EC2_INSTANCE_KEY_NAME }}
      run_tests_cmd: "echidna-test contracts/Contract.sol --contract Contract --config config.yaml || true"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: remote-echidna
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Provision
        run: ./scripts/provision.sh ${{ env.s3_bucket }} ${{ env.project_git_checkout }}
      - name: Terraform Init
        run: terraform init
      - name: Terraform Apply
        id: apply
        run: |
          terraform init
          terraform apply -var="ec2_instance_key_name=${{ env.ec2_instance_key_name }}" -var="project=${{ env.project }}" -var="project_git_url=${{ env.project_git_url }}" -var="project_git_checkout=${{ env.project_git_checkout }}" -var="run_tests_cmd=${{ env.run_tests_cmd }}" -var="s3_bucket=${{ env.s3_bucket }}" -no-color -input=false -auto-approve
          EC2_INSTANCE_ID=$(terraform output ec2_instance_id)
          echo "::set-output name=EC2_INSTANCE_ID::$EC2_INSTANCE_ID"
      - name: Provisioned
        run: ./scripts/provisioned.sh ${{ env.s3_bucket }} ${{ env.project_git_checkout }} ${{ steps.apply.outputs.EC2_INSTANCE_ID }}

